{"version":3,"sources":["../src/main.js","../src/api.js","../src/config.js","../src/routing.js","../src/view.js","../src/translate/translate.js","../src/utils/utils.js","../src/utils/EventListener.js","../src/crud/Controller.js","../src/crud/Repository.js","../src/translate/translationConfig.js","../src/translate/translationLoaderFactory.js","../src/translate/translationService.js","../src/menu/menu.js","../src/menu/menuManager.js","../src/module/module.js","../src/module/moduleList.js","../src/module/moduleManager.js","../src/module/moduleWidget.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K;ACXA,kF;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K;ACnrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K;ACjtnKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"my-place.js","sourcesContent":["(function () {\n'use strict';\nangular.module('MyPlace', ['ui.router', 'ngAnimate', 'ngMaterial', 'MyPlace.Config', 'MyPlace.Crud', 'MyPlace.Translate', 'MyPlace.Menu', 'MyPlace.Module']);\n\nfunction mainCtrl ($scope, $timeout, menuManager) {\n\t$scope.menuVisible = false;\n\t$scope.menuHidden = true;\n\tmenuManager.addEventListener('menuUpdated', function () {\n\t\tvar menu = menuManager.getActualMenu();\n\t\t$scope.menuVisible = menu.visible;\n\t\t$scope.menuHidden = !menu.visible;\n\t});\n}\n\nmainCtrl.$inject = ['$scope', '$timeout', 'MyPlace.Menu.menuManager'];\n\nangular.module('MyPlace')\n.controller('MyPlace.mainCtrl', mainCtrl)\n;\n})();","(function () {\n'use strict';\nfunction apiService ($resource, Config) {\n\tvar backendPrefix = Config.backendPrefix\n\t  , frontendPrefix = Config.frontendPrefix\n\t  , BACKEND = backendPrefix\n\t  , FRONTEND = frontendPrefix\n\t  , Module = $resource(backendPrefix+'modules')\n\t  , Menu = $resource(frontendPrefix+'modules/:module/resources/menu.json')\n\t  ;\n\n\tthis.BACKEND = BACKEND;\n\tthis.FRONTEND = FRONTEND;\n\tthis.getResource = getResource;\n\tthis.Module = Module;\n\tthis.Menu = Menu;\n\n\tfunction getResource (config) {\n\t\tvar outputResource\n\t\t  , prefix = config.type || BACKEND\n\t\t  , sufix = ''\n\t\t  , name = config.name\n\t\t  , fields = config.fields\n\t\t  , module = config.module || ''\n\t\t  , resource = config.resource || name[1]+'/:id'\n\t\t  , rConfig = config.config || {id: '@id'}\n\t\t  , actions = config.actions || {\n\t\t  \t\tupdate: {method: 'PUT', params: {}}\n\t\t  \t}\n\t\t  ;\n\t\tif(config.type == FRONTEND) {\n\t\t\tprefix += 'modules/'\n\t\t}\n\t\toutputResource = $resource(prefix+module+'/'+resource+sufix, rConfig, actions);\n\t\toutputResource.$fields = fields;\n\t\toutputResource.$name = name;\n\t\treturn outputResource;\n\t}\n}\n\napiService.$inject = ['$resource', 'MyPlace.configService'];\n\nangular.module('MyPlace.Api', ['ngResource'])\n.service('MyPlace.apiService', apiService)\n;  \n})();\n","(function () {\n'use strict';\nangular.module('MyPlace.Config', [])\n.provider('MyPlace.configService', [function () {\n    var that = this,\n        waiting = [];\n    \n\tthis.backendPrefix = 'backend/web/app_dev.php/';\n\tthis.frontendPrefix = 'frontend/';\n    \n    this.updateConfig = function (obj) {\n        for (var name in obj) {\n            this[name] = obj[name];\n        }\n    };\n    \n    this.waitForChanges = function () {\n        var deferred = $.Deferred();\n        waiting.push(deferred);\n        return deferred.promise();\n    }\n    \n    this.$get = function () {\n        resolveWaiting();\n        return that;\n    };\n    \n    function resolveWaiting () {\n        waiting.forEach(function (w) {\n            w.resolve(that);\n        });\n    }\n}])\n;\n})();\n","(function () {\n'use strict';\nfunction routingConfig ($stateProvider, Config) {\n    Config.waitForChanges().then(function () {\n        $stateProvider\n            .state('module', {\n                url: '/:module/:view',\n                templateUrl: Config.frontendPrefix+'template/module/moduleView.tpl'\n            });    \n    });\n}\nroutingConfig.$inject = ['$stateProvider', 'MyPlace.configServiceProvider'];\n    \nangular.module('MyPlace').config(routingConfig);\n})();","(function () {\n    function view (templateUrl) {\n        return {\n            restrict: 'E',\n            templateUrl: templateUrl('view')\n        };\n    }\n    view.$inject = ['MyPlace.Utils.templateUrl'];\n\n    angular.module('MyPlace')\n        .directive('mpView', view);\n})();","angular.module('MyPlace.Translate', ['pascalprecht.translate', 'MyPlace.Config']);","(function () {\n'use strict';\nangular.module('MyPlace.Utils', [])\n.factory('capitalizeFirst', function () {\n\treturn function capitalizeFirst (str) {\n\t\treturn str.slice(0, 1).toUpperCase()+str.substr(1);\n\t};\n})\n.factory('promisifyReturn',['$q', function ($q) {\n\treturn function promisifyReturn (fn) {\n\t\treturn function wrapper () {\n\t\t\tvar deferred = $q.defer();\n\t\t\tdeferred.resolve(fn.call(null, arguments));\n\t\t\treturn deferred.promise;\n\t\t};\n\t};\n}])\n.factory('MyPlace.Utils.templateUrl', ['MyPlace.configService', function (config) {\n\treturn function templateUrl (template, module) {\n        var src = config.frontendPrefix;\n        if(module) {\n            src += 'modules/'+module +'/';\n        }\n        src += 'template/'+template+'.tpl';\n\t\treturn src;\n\t};\n}]);\n})();","(function () {\n'use strict';\nfunction EventListener (promisedEvents) {\n\tvar events = {};\n\tpromisedEvents = (function (events) {\n\t\tvar output = {};\n\t\tevents.forEach(function (name) {\n\t\t\toutput[name] = [];\n\t\t});\n\t\treturn output;\n\t})(promisedEvents || []);\n\n\tthis.removeEventListener = removeEventListener;\n\tthis.addEventListener = addEventListener;\n\tthis.launchEvent = launchEvent;\n\n\tfunction removeEventListener (name, listener) {\n\t\tvar index = events[name].indexOf(listener);\n\t\tif(index > -1) {\n\t\t\treturn events[name].splice(index, 1);\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\tfunction addEventListener (name, listener) {\n\t\tif(!events[name]) {\n\t\t\tevents[name] = [];\n\t\t}\n\t\tvar index = events[name].indexOf(listener);\n\t\tif(index == -1) {\n\t\t\tevents[name].push(listener);\n\t\t}\n\t\tif(promisedEvents[name]) {\n\t\t\tpromisedEvents[name].forEach(function (data) {\n\t\t\t\tlistener.apply(data.that, data.params);\n\t\t\t});\n\t\t}\n\t}\n\tfunction launchEvent (name, params, that) {\n\t\tthat = that || this;\n\t\tif(events[name]) {\n\t\t\tevents[name].forEach(function (listener) {\n\t\t\t\tlistener.apply(that, params);\n\t\t\t});\t\n\t\t}\n\t\tif(promisedEvents[name]) {\n\t\t\tpromisedEvents[name].push({params: params, that: that});\n\t\t}\n\t}\n}\n\nangular.module('MyPlace.Utils')\n.factory('MyPlace.Utils.EventListener', function () {\n\treturn EventListener;\n});\n})();","(function () {\n'use strict';\nfunction controllerFactory (capitalizeFirst) {\n\tfunction Controller ($scope, repository, listeners) {\n\t\tvar name = repository.Entity.$name\n\t\t  , singularName = name[0]\n\t\t  , pluralName = name[1]\n\t\t  , capitalizedSingular = capitalizeFirst(singularName)\n\t\t  , capitalizedPlural = capitalizeFirst(pluralName)\n\t\t  , get = 'get'+capitalizedPlural\n\t\t  , newName = 'new'+capitalizedSingular\n\t\t  , add = 'add'+capitalizedSingular\n\t\t  , save = 'save'+capitalizedSingular\n\t\t  , create = 'create'+capitalizedSingular\n\t\t  , deleteName = 'delete'+capitalizedSingular\n\t\t  , deleteEvent = singularName+'Deleted'\n\t\t  , saveEvent = singularName+'Saved'\n\t\t  , getEmpty = 'getEmpty'+capitalizedSingular+'Data'\n\t\t  ;\n\n\t\t$scope[pluralName] = [];\n\t\t$scope[newName] = {};\n\n\t\t$scope[add] = addEntity;\n\t\t$scope[deleteName] = deleteEntity;\n\n\t\t\n\t\tif(listeners && typeof listeners[saveEvent] != 'undefined') {\n\t\t\trepository.addEventListener(saveEvent, listeners[saveEvent]);\n\t\t} else {\n\t\t\trepository.addEventListener(saveEvent, saveEventListener);\n\t\t}\n\n\t\tif(listeners && typeof listeners[deleteEvent] != 'undefined') {\n\t\t\trepository.addEventListener(deleteEvent, listeners[deleteEvent]);\n\t\t} else {\n\t\t\trepository.addEventListener(deleteEvent, deleteEventListener);\n\t\t}\n\n\t\tthis['load'+capitalizedPlural] = loadEntities;\n\t\tthis[add] = addEntity;\n\t\tthis['emptyNew'+capitalizedSingular] = emptyNewEntity;\n\t\tthis[deleteName] = deleteEntity;\n\t\tthis.deleteEventListener = deleteEventListener;\n\t\tthis.saveEventListener = saveEventListener;\n\n\t\tfunction loadEntities () {\n\t\t\trepository[get]().then(function (entities) {\n\t\t\t\t$scope[pluralName] = entities;\n\t\t\t});\n\t\t}\n\n\t\tfunction addEntity () {\n\t\t\trepository[save](repository[create]($scope[newName]));\n\t\t}\n\n\t\tfunction deleteEntity (entity) {\n\t\t\trepository[deleteName](entity);\n\t\t}\n\n\t\tfunction deleteEventListener (entity) {\n\t\t\tvar index = $scope[pluralName].indexOf(entity);\n\t\t\tif(index >= 0) {\n\t\t\t\t$scope[pluralName].splice(index, 1);\n\t\t\t}\n\t\t}\n\n\t\tfunction emptyNewEntity () {\n\t\t\t$scope[newName] = repository[getEmpty]();\n\t\t}\n\n\t\tfunction saveEventListener (entity) {\n\t\t\t$scope[pluralName].push(entity);\n\t\t\temptyNewEntity();\n\t\t}\n\n\t}\n\treturn Controller;\n}\ncontrollerFactory.$inject = ['capitalizeFirst'];\nangular.module('MyPlace.Crud', ['MyPlace.Utils'])\n.factory('MyPlace.Crud.Controller', controllerFactory)\n;\n})();","(function () {\n'use strict';\nfunction repositoryFactory ($q, $http, EventListener, capitalizeFirst) {\n\tfunction Repository (Entity) {\n\t\tvar parent = {}\n\t\t  , entityName = Entity.$name\n\t\t  , fields = Entity.$fields\n\t\t  ;\n\t\tEventListener.call(parent);\n\n\t\tvar output = [\n\t\t\t['createEntity', 0, createEntity]\n\t \t  , ['saveEntity', 0, saveEntity]\n\t \t  , ['deleteEntity', 0, deleteEntity]\n\t \t  , ['updateEntity', 0, updateEntity]\n\t \t  , ['getEntity', 1, getEntities]\n\t \t  , ['getEmptyEntityData', 0, getEmptyEntityData]\n\t\t];\n\t\tfor (var i=0, l=output.length; i<l; i++) {\n\t\t\tvar def = output[i]\n\t\t\t  , funcName = def[0]\n\t\t\t  , eName = entityName[def[1]]\n\t\t\t  , func = def[2]\n\t\t\t  ;\n\t\t\tfuncName = funcName.replace('Entity', capitalizeFirst(eName));\n\t\t\tfuncName = funcName.replace('Entities', capitalizeFirst(eName));\n\t\t\tthis[funcName] = func;\n\t\t}\n\t\tfor (var prop in parent) {\n\t\t\tthis[prop] = parent[prop];\n\t\t}\n\n\t\tthis.Entity = Entity;\n\n\t\tfunction createEntity (data) {\n\t\t\tvar entity = new Entity()\n\t\t\t  , emptyData = getEmptyEntityData()\n\t\t\t  ;\n\t\t\tfor(var prop in emptyData) {\n\t\t\t\tif(data[prop]) {\n\t\t\t\t\tentity[prop] = data[prop];\n\t\t\t\t} else {\n\t\t\t\t\tentity[prop] = emptyData[prop];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn entity;\n\t\t}\n\n\t\tfunction saveEntity (entity) {\n\t\t\treturn entity.$save(function (data, getResponseHeaders) {\n                if(data.id) {\n                    entity.id = data.id;\n                }\n                parent.launchEvent(entityName[0]+'Saved', [entity]);\n\t\t\t\t//var location = getResponseHeaders().location;\n\t\t\t\t//$http.get(location).then(function (response) {\n\t\t\t\t//\tfor(var prop in response.data) {\n\t\t\t\t//\t\tentity[prop] = response.data[prop]\n\t\t\t\t//\t}\n\t\t\t\t//\n\t\t\t\t//});\n\t\t\t});\n\t\t}\n\n\t\tfunction deleteEntity (entity) {\n\t\t\treturn entity.$delete(function () {\n\t\t\t\tparent.launchEvent(entityName[0]+'Deleted', [entity]);\n\t\t\t});\n\t\t}\n\n\t\tfunction updateEntity (entity) {\n\t\t\treturn entity.$update(function () {\n\t\t\t\tparent.launchEvent(entityName[0]+'Updated', [entity]);\n\t\t\t});\n\t\t}\n\n\t\tfunction getEntities () {\n\t\t\tvar deferred = $q.defer();\n\t\t\tEntity.query(function (entities) {\n\t\t\t\tdeferred.resolve(entities);\n\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t}\n\n\t\tfunction getEmptyEntityData () {\n\t\t\tvar output = {};\n\n\t\t\tfor(var prop in fields) {\n\t\t\t\toutput[prop] = getDefaultValue(fields[prop]);\n\t\t\t\t\n\t\t\t}\n\n\t\t\treturn output;\n\n\t\t\tfunction getDefaultValue (field) {\n\t\t\t\tvar value = null;\n\t\t\t\t\n\t\t\t\tif(typeof field.defaultValue != 'undefined') {\n\t\t\t\t\tvalue = field.defaultValue;\n\t\t\t\t} else if (field.type) {\n\t\t\t\t\tswitch(field.type) {\n\t\t\t\t\t\tcase String:\n\t\t\t\t\t\t\tvalue = '';\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase Number:\n\t\t\t\t\t\t\tvalue = 0;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase Date:\n\t\t\t\t\t\t\tvalue = new Date();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\t\n\t\t\t\t}\n\n\t\t\t\treturn value;\n\t\t\t}\n\t\t}\n\t}\n\treturn Repository;\n}\nrepositoryFactory.$inject = ['$q', '$http', 'MyPlace.Utils.EventListener', 'capitalizeFirst'];\nangular.module('MyPlace.Crud')\n.factory('MyPlace.Crud.Repository', repositoryFactory)\n;\n})();","(function () {\n'use strict';\nfunction translationServiceConfig (config, translationServiceProvider) {\n\ttranslationServiceProvider.registerModule({name: 'MyPlace', slug: 'MyPlace'}, function (lang) {\n\t\treturn config.frontendPrefix+'translations/'+lang+'.json';\n\t});\n}\ntranslationServiceConfig.$inject = ['MyPlace.configServiceProvider', 'MyPlace.Translate.translationServiceProvider'];\n\nfunction translateConfig ($translateProvider) {\n\t$translateProvider.useLoader('MyPlace.Translate.translationLoader');\n\t$translateProvider.use('pl-PL');\n\t$translateProvider.preferredLanguage('pl-PL');\n\t$translateProvider.fallbackLanguage('en-GB');\n}\ntranslateConfig.$inject = ['$translateProvider'];\n\nangular.module('MyPlace.Translate')\n.config(translationServiceConfig)\n.config(translateConfig)\n;\n})();","(function () {\n'use strict';\nfunction translationLoaderFactory ($q, $http, translationService) {\n\treturn function translationLoader (options) {\n\t\tvar deferred = $q.defer()\n\t\t  , lang = options.key\n\t\t  , modules = translationService.getModules()\n\t\t  , counter = 0\n\t\t  , translations = {}\n\t\t  ;\n\t\tmodules.forEach(function (module) {\n\t\t\tvar moduleDef = translationService.getModule(module.slug)\n\t\t\t  ;\n\t\t\t$http\n\t\t\t\t.get(moduleDef.resolver(lang, module.slug))\n\t\t\t\t.then(addTranslations(module.name))\n\t\t\t\t.finally(tryResolve)\n\t\t\t\t;\n\n\t\t});\n\t\treturn deferred.promise;\n\n\t\tfunction addTranslations (module) {\n\t\t\treturn function (receivedTranslations) {\n\t\t\t\tvar newTranslations = receivedTranslations.data;\n\t\t\t\tfor(var translationKey in newTranslations) {\n\t\t\t\t\tvar targetKey = module;\n\t\t\t\t\tif(translationKey != module) {\n\t\t\t\t\t\ttargetKey += '.'+translationKey;\n\t\t\t\t\t}\n\t\t\t\t\ttranslations[targetKey] = newTranslations[translationKey];\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\t\n\n\t\tfunction tryResolve () {\n\t\t\tcounter++;\n\t\t\tif(counter == modules.length) {\n\t\t\t\tdeferred.resolve(translations);\n\t\t\t}\n\t\t}\n\t};\n}\ntranslationLoaderFactory.$inject = ['$q', '$http', 'MyPlace.Translate.translationService'];\n\nangular.module('MyPlace.Translate')\n.factory('MyPlace.Translate.translationLoader', translationLoaderFactory)\n;\n})();","(function () {\n'use strict';\nfunction translationServiceProvider (Config) {\n\tvar moduleMap = {}\n\t  , actualModule = ''\n\t  , registeredModules = []\n\t  ;\n\n\tthis.registerModule = registerModule;\n\n\tthis.$get = function ($injector, moduleManager) {\n\t\tmoduleManager.addEventListener('moduleAdded', function (module) {\n\t\t\tmoduleRegister(module);\n\t\t\tmodule.children.forEach(function (submodule) {\n\t\t\t\tmoduleRegister(submodule);\n\t\t\t});\n\t\t});\n\n\t\treturn {\n\t\t\tregisterModule: moduleRegister\n\t\t  , getModules: getModules\n\t\t  , getModule: getModule\n\t\t}\n\n\t\tfunction moduleRegister (module, resolvingFunction) {\n\t\t\tvar $translate = $injector.get('$translate');\n\t\t\tregisterModule(module, resolvingFunction);\n\t\t\t$translate.refresh();\n\t\t}\n\t}\n\tthis.$get.$inject = ['$injector', 'MyPlace.Module.moduleManager'];\n\n\tfunction registerModule (module, resolvingFunction) {\n\t\tmoduleMap[module.slug] = {\n\t\t\tresolver: resolvingFunction || standardNameResolver,\n\t\t\tmoduleData: module\n\t\t};\n\t\tregisteredModules.push(module);\n\t}\n\n\tfunction getModules () {\n\t\treturn registeredModules;\n\t}\n\n\tfunction getModule (moduleName) {\n\t\treturn moduleMap[moduleName];\n\t}\n\n\tfunction standardNameResolver (language, module) {\n\t\treturn Config.frontendPrefix+'modules/'+module+'/resources/translations/'+language+'.json';\n\t}\n}\n    \n    translationServiceProvider.$inject = ['MyPlace.configServiceProvider'];\n\nangular.module('MyPlace.Translate')\n.provider('MyPlace.Translate.translationService', translationServiceProvider)\n;\n})();","(function () {\n\t'use strict';\n\tfunction menuCtrl () {\n\t}\n\n\tmenuCtrl.$inject = [];\n\n\tfunction menuDirective ($rootScope, $state, $timeout, Config, menuManager, templateUrl) {\n\t\treturn {\n\t\t\trestrict: 'E',\n\t\t\tcontroller: function ($scope) {\n\t\t\t\t$scope.menu = {\n\t\t\t\t\tvisible: false\n\t\t\t\t};\n                $scope.view = $state.params.view;\n\n                $rootScope.$on('$stateChangeSuccess', function () {\n                    $scope.view = $state.params.view;\n                });\n\t\t\t\tmenuManager.addEventListener('menuUpdated', function () {\n\t\t\t\t\t$timeout(function () {\n\t\t\t\t\t\t$scope.menu = menuManager.getActualMenu();\n\t\t\t\t\t}, 300);\n\t\t\t\t});\n\t\t\t},\n\t\t\ttemplateUrl: templateUrl('menu/menu')\n\t\t};\n\t}\n\tmenuDirective.$inject = ['$rootScope', '$state', '$timeout', 'MyPlace.configService', 'MyPlace.Menu.menuManager', 'MyPlace.Utils.templateUrl'];\n\n\tfunction menuItemDirective ($state, templateUrl) {\n\t\treturn {\n\t\t\trestrict: 'E',\n\t\t\tscope: {\n\t\t\t\titem: '=',\n                module: '='\n\t\t\t},\n\t\t\ttemplateUrl: templateUrl('menu/menuItem'),\n\t\t\tlink: function ($scope, element, attrs) {\n\t\t\t\telement.parent().on('click', function (e) {\n                    $state.go('module', {\n                        module: $scope.module,\n                        view: $scope.item.view\n                    });\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t}\n\tmenuItemDirective.$inject = ['$state', 'MyPlace.Utils.templateUrl'];\n\n\tangular.module('MyPlace.Menu', [])\n\t\t.controller('MyPlace.Menu.menuCtrl', menuCtrl)\n\t\t.directive('mpMenu', menuDirective)\n\t\t.directive('mpMenuItem', menuItemDirective);\n})();","(function () {\n\t'use strict';\n\tfunction menuManager ($timeout, EventListener, api, moduleManager) {\n\t\tEventListener.call(this);\n\n\t    var that = this,\n\t        actualMenu = {},\n\t        actualModule = null,\n\t        actualModuleFamily = [];\n\t\t  \n\t\tthis.getActualMenu = getActualMenu;\n\n\t\tmoduleManager.addEventListener('moduleListChanged', function () {\n\t\t\tdeferUpdate();\n\t\t});\n\t\tmoduleManager.addEventListener('activeModuleChanged', function () {\n\t\t\tdeferUpdate();\n\t\t});\n\n\t\tfunction getActualMenu () {\n\t\t\treturn actualMenu;\n\t\t}\n\n\t\tfunction updateMenu () {\n\t\t\tif(actualModule) {\n\t\t\t\tif(actualModule.parent) {\n\t\t\t\t\tactualModule = actualModule.parent;\n\t\t\t\t}\n\t\t\t\tactualMenu = api.Menu.get({module: actualModule.slug}, function () {\n\t\t\t\t\tcalculateVisibility(actualMenu);\n\t\t\t\t\tthat.launchEvent('menuUpdated');\n\t\t\t\t});\n\t\t\t\tcalculateVisibility(actualMenu);\n\t\t\t\tthat.launchEvent('menuUpdated');\n\t\t\t\t(function (module) {\n\t\t\t\t\tactualMenu.$promise.then(function (actualMenu) {\n\t\t\t\t\t\tactualMenu.module = module.slug;\n\t\t\t\t\t\tmodule.children.forEach(function (submodule) {\n\t\t\t\t\t\t\tif(!actualMenu.extensions) {\n\t\t\t\t\t\t\t\tactualMenu.extensions = [];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvar submenu = api.Menu.get({module: submodule.slug}, function (submenu) {\n\t\t\t\t\t\t\t\tsubmenu.module = submodule.slug;\t\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tactualMenu.extensions.push(submenu);\n\t\t\t\t\t\t\tcalculateVisibility(actualMenu);\n\t\t\t\t\t\t\tthat.launchEvent('menuUpdated');\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t})(actualModule);\n\t\t\t}\n\t\t}\n\n\t\tfunction calculateVisibility (menu) {\n\t\t\tvar visible = false,\n\t\t\t    itemsCount = 0;\n\n\t\t\tif(menu.items) {\n\t\t\t\titemsCount = menu.items.length;\n\t\t\t\tvisible = (itemsCount>0);\n\t\t\t\tif(!visible && menu.extensions) {\n\t\t\t\t\tmenu.extensions.forEach(function (extension) {\n\t\t\t\t\t\titemsCount += extension.items.length;\n\t\t\t\t\t});\n\t\t\t\t\tvisible = (itemsCount>0);\n\t\t\t\t}\n\t\t\t} \n\t\t\tmenu.visible = visible;\n\t\t}\n\n\t\tfunction deferUpdate () {\n\t\t\tif(deferUpdate.promise) {\n\t\t\t\t$timeout.cancel(deferUpdate.promise);\n\t\t\t}\n\t\t\tdeferUpdate.promise = $timeout(function () {\n\t\t\t\tactualModule = moduleManager.getActiveModule();\n\t\t\t\tif(actualModule) {\n\t\t\t\t\tvar isModuleInFamily = (actualModuleFamily.indexOf(actualModule.slug) > -1);\n\t\t\t\t\tif(!isModuleInFamily) {\n\t\t\t\t\t\tactualModuleFamily = moduleManager.getModuleFamily(actualModule).map(function (module) {\n\t\t\t\t\t\t\treturn module.slug;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tupdateMenu();\t\t\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, 200);\n\t\t}\n\t}\n\tmenuManager.$inject = ['$timeout', 'MyPlace.Utils.EventListener', 'MyPlace.apiService', 'MyPlace.Module.moduleManager'];\n\n\tangular.module('MyPlace.Menu')\n\t\t.service('MyPlace.Menu.menuManager', menuManager);\n})();","(function () {\n'use strict';\nfunction moduleCtrl ($scope, $rootScope, $state, $timeout, moduleManager, templateUrl) {\n\tvar shownFirst = false,\n        activeModule = '',\n\t    activeView = '';\n\t  \n\t$scope.actualTemplate = '';\n\t$rootScope.$on('$stateChangeSuccess', function () {\n\t\tmoduleManager.setActiveModuleAndView($state.params.module, $state.params.view);\n\t});\n\tmoduleManager.addEventListener('activeModuleAndViewChanged', function (module, view) {\n        if(!shownFirst) {\n            shownFirst = true;\n            $scope.$emit('MyPlace.Module.initiated');\n        }\n\t\tactiveModule = module;\n\t\tactiveView = view;\n\t\tsetActualTemplate();\n\t});\n    moduleManager.setActiveModuleAndView($state.params.module, $state.params.view);\n\n\tfunction setActualTemplate () {\n\t\t$scope.actualTemplate = templateUrl(activeView, activeModule);\n\t}\n}\n\nmoduleCtrl.$inject = ['$scope', '$rootScope', '$state', '$timeout', 'MyPlace.Module.moduleManager', 'MyPlace.Utils.templateUrl'];\n\nangular.module('MyPlace.Module', ['MyPlace.Utils', 'MyPlace.Api'])\n    .controller('MyPlace.Module.moduleCtrl', moduleCtrl);\n})();","(function () {\n'use strict';\nfunction moduleList (Config, moduleManager) {\n\treturn {\n\t\trestrict: 'E',\n\t\tcontroller: function ($scope) {\n\t\t\t$scope.modules = [];\n\t\t\t$scope.activeModule = [];\n\t\t\t$scope.isModuleActive = function (moduleSlug) {\n\t\t\t\treturn ($scope.activeModule.indexOf(moduleSlug) > -1);\n\t\t\t};\n\n\t\t\tmoduleManager.addEventListener('moduleListChanged', function () {\n\t\t\t\t$scope.modules = moduleManager.getModules();\n\t\t\t\tvar activeModule = moduleManager.getActiveModule();\n\t\t\t\tupdateActives(activeModule?activeModule.slug:'');\n\t\t\t});\n\t\t\tmoduleManager.addEventListener('activeModuleChanged', updateActives);\n\n\t\t\tfunction updateActives (activeModule) {\n\t\t\t\tvar activeModules = [activeModule];\n\t\t\t\t(function appendActives (module) {\n\t\t\t\t\tif(module && module.parent) {\n\t\t\t\t\t\tactiveModules.push(module.parent.slug);\n\t\t\t\t\t\tappendActives(module.parent);\n\t\t\t\t\t}\n\t\t\t\t})(moduleManager.getActiveModule());\n\t\t\t\t$scope.activeModule = activeModules;\n\t\t\t}\n\t\t},\n\t\ttemplateUrl: Config.frontendPrefix+'template/module/moduleList.tpl'\n\t};\n}\nmoduleList.$inject = ['MyPlace.configService', 'MyPlace.Module.moduleManager'];\n\nfunction moduleListCtrl () {\n}\n\n\nangular.module('MyPlace.Module')\n.controller('MyPlace.Module.moduleListCtrl', moduleListCtrl)\n.directive('mpModuleList', moduleList);\n})();","(function () {\n'use strict';\nfunction moduleManagerProvider () {\n\tvar moduleOrder = {},\n\t\torderList = [];\n\n\tthis.addModuleOrder = addModuleOrder;\n\tthis.$get = function ($state, api, EventListener) {\n\t\treturn new ModuleManager($state, api, EventListener);\n\t};\n\tthis.$get.$inject = ['$state', 'MyPlace.apiService', 'MyPlace.Utils.EventListener'];\n\n\tfunction addModuleOrder (order) {\n\t\tvar inversedOrder = {},\n\t\t\tprioritiesList = [];\n\t\tfor(var name in order) {\n\t\t\tmoduleOrder[name] = order[name];\n\t\t}\n\t\tfor(var name in moduleOrder) {\n\t\t\tvar priority = moduleOrder[name];\n\t\t\tif(!inversedOrder[priority]) {\n\t\t\t\tinversedOrder[priority] = [];\n\t\t\t\tprioritiesList.push(priority);\n\t\t\t}\n\t\t\tinversedOrder[priority].push(name);\n\t\t}\n\t\tprioritiesList.sort(function (a, b) {\n\t\t\tif(a == '*') {\n\t\t\t\treturn 1;\n\t\t\t} else if(b == '*') {\n\t\t\t\treturn -1;\n\t\t\t} else {\n\t\t\t\treturn a-b;\n\t\t\t}\n\t\t});\n\t\tprioritiesList.forEach(function (priority) {\n\t\t\tinversedOrder[priority].forEach(function (name) {\n\t\t\t\torderList.push(name);\n\t\t\t});\n\t\t});\n\t}\n\n\tfunction reOrderModules (modules) {\n\t\tmodules.sort(function (left, right) {\n\t\t\tvar leftIndex = -1,\n\t\t\t\trightIndex = -1;\n\t\t\tfor(var i=0; i<orderList.length; i++) {\n\t\t\t\tvar name = orderList[i];\n\t\t\t\tif(leftIndex == -1 && name == left.slug) {\n\t\t\t\t\tleftIndex = i;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(rightIndex == -1 && name == right.slug) {\n\t\t\t\t\trightIndex = i;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn leftIndex - rightIndex;\n\t\t});\n\t}\n\n\tfunction ModuleManager ($state, api, EventListener) {\n\t\tEventListener.call(this, ['moduleAdded', 'moduleListChanged']);\n\n\t\t(function () {\n\t\t\tapi.Module.query(function (modules) {\n\t\t\t\tmodules.forEach(function (module) {\n\t\t\t\t\tregisterModule(module);\n\t\t\t\t});\n                if($state.params.module) {\n                    setActiveModuleAndView($state.params.module, $state.params.view);\n                }\n\t\t\t});\n\t\t})();\n\t\tvar that = this,\n\t\t\tmodules = [],\n\t\t\tmodulesBySlug = {},\n\t\t\tactiveModule = null,\n\t\t\tactiveView = 'main';\n\n\t\tthis.registerModule = registerModule;\n\t\tthis.getModules = getModules;\n\t\tthis.setActiveModuleAndView = setActiveModuleAndView;\n\t\tthis.setActiveModule = setActiveModule;\n\t\tthis.setActiveView = setActiveView;\n\t\tthis.getActiveModule = getActiveModule;\n\t\tthis.getModuleFamily = getModuleFamily;\n\n\t\tfunction getModules () {\n\t\t\treturn modules;\n\t\t}\n\n\t\tfunction registerModule (module) {\n\t\t\tmodules.push(module);\n\t\t\tmodulesBySlug[module.slug] = module;\n\t\t\tmodule.children.forEach(function (submodule) {\n\t\t\t\tsubmodule.parent = module;\n\t\t\t\tmodulesBySlug[submodule.slug] = submodule;\n\t\t\t});\n\t\t\treOrderModules(modules);\n\t\t\tthat.launchEvent('moduleListChanged');\n\t\t\tthat.launchEvent('moduleAdded', [module]);\n\t\t}\n\n\t\tfunction setActiveModuleAndView (module, view) {\n\t\t\tsetActiveModule(module);\n\t\t\tsetActiveView(view);\n\t\t\tthat.launchEvent('activeModuleAndViewChanged', [activeModule, activeView]);\n\t\t}\n\n\t\tfunction setActiveModule (moduleSlug) {\n\t\t\tif(activeModule != moduleSlug) {\n\t\t\t\tactiveModule = moduleSlug;\n\t\t\t\tthat.launchEvent('activeModuleChanged', [activeModule]);\t\n\t\t\t}\n\t\t}\n\n\t\tfunction getActiveModule () {\n\t\t\treturn modulesBySlug[activeModule];\n\t\t}\n\n\t\tfunction setActiveView (view) {\n\t\t\tview = view || 'main';\n\t\t\tif(activeView != view) {\n\t\t\t\tactiveView = view;\n\t\t\t\tthat.launchEvent('activeViewChanged', [activeView])\t\n\t\t\t}\n\t\t}\n\n\t\tfunction getActiveView () {\n\t\t\treturn activeView;\n\t\t}\n\n\t\tfunction getModuleFamily (module) {\n\t\t\tfunction getRoot (module) {\n\t\t\t\tif(module && module.parent) {\n\t\t\t\t\treturn getRoot(module.parent);\n\t\t\t\t} else {\n\t\t\t\t\treturn module;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction getDescendants (module) {\n\t\t\t\tvar output = [];\n\t\t\t\tif(module) {\n\t\t\t\t\toutput.push(module);\n\t\t\t\t\tif(module.children) {\n\t\t\t\t\t\tmodule.children.forEach(function (module) {\n\t\t\t\t\t\t\toutput = output.concat(getDescendants(module));\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn output;\n\t\t\t}\n\n\t\t\treturn getDescendants(getRoot(module));\n\t\t}\n\t}\n}\n\n\nangular.module('MyPlace.Module')\n\t.provider('MyPlace.Module.moduleManager', moduleManagerProvider);\n})();","(function () {\n'use strict';\nfunction moduleWidget ($state, templateUrl, moduleManager) {\n\treturn {\n\t\trestrict: 'E',\n\t\ttemplateUrl: templateUrl('module/moduleWidget'),\n\t\tscope: {\n\t\t\tmodule: '='\n\t\t},\n\t\tlink: function ($scope, element) {\n            element.parent().on('click', function (e) {\n            \te.preventDefault();\n            \tvar activeModule = moduleManager.getActiveModule();\n            \tif(!activeModule || activeModule.slug != $scope.module.slug) {\n            \t\t$state.go('module', {\n\t                    module: $scope.module.slug,\n\t                    view: 'main'\n\t                });\n            \t}\n            });\n\t\t\t$scope.innerText = $scope.module.name;\n\t\t\t$scope.widgetTemplateSrc = templateUrl('moduleWidget', $scope.module.slug);\n\t\t\t$scope.$on('MyPlace.Module.changeWidgetText', function (event, newText) {\n\t\t\t\t$scope.innerText = newText;\n\t\t\t});\n\t\t}\n\t}\n}\nmoduleWidget.$inject = ['$state', 'MyPlace.Utils.templateUrl', 'MyPlace.Module.moduleManager'];\n\nangular.module('MyPlace.Module')\n\t.directive('mpModuleWidget', moduleWidget);\n})();"]}